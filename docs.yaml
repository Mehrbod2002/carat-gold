openapi: 3.0.0
info:
  title: User API
  description: API for managing user information
  version: 1.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/M9AKHLAGHPOOR/Fasih/1.0.0
  - url: https://goldshop24.co/api
paths:
  /user/me:
    get:
      summary: Get current user information
      description: Retrieve information about the currently authenticated user.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Done"
                  data:
                    $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized, user not authenticated
        "403":
          description: Forbidden, user doesn't have permission

  /auth/user/register:
    post:
      summary: User Registration
      description: Register a new user with phone number and OTP code.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "registered"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "JWT_TOKEN"
                      refresh_token:
                        type: string
                        example: "refresh_token_value_here"
        "400":
          description: Bad request or invalid OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "request for otp first"
                  data:
                    type: string
                    example: "invalid_otp"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "internal server connection"
                  data:
                    type: string
                    example: "internal_error"

  /auth/user/send_otp:
    post:
      summary: Send OTP
      description: Send OTP (One-Time Password) to the provided phone number.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendOTP"
      responses:
        "200":
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "done"
                  data:
                    type: string
                    example: "otp_sent"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "invalid request parameters"
                  data:
                    type: string
                    example: "invalid_parameters"
        "406":
          description: OTP freezed or not allowed to send SMS
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "otp freezed for 1 hour"
                  data:
                    type: string
                    example: "otp_freezed_for_1_hour"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "internal server connection"
                  data:
                    type: string
                    example: "internal_error"

  /user/general_data:
    get:
      summary: Get general data
      description: Retrieve general data including call center information.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Done"
                  call_center:
                    $ref: "#/components/schemas/CallCenterDatas"
                  general_data:
                    $ref: "#/components/schemas/GeneralData"
  /user/products:
    get:
      summary: Get products
      description: Retrieve a list of products.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Done"
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
  /user/get_fandq:
    get:
      summary: Get frequently asked questions and answers
      description: Retrieve a list of frequently asked questions and their corresponding answers.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "done"
                  fandq:
                    type: array
                    items:
                      $ref: "#/components/schemas/FANDQ"
  /user/upload_documents:
    post:
      summary: Upload user documents
      description: |
        Upload front and back images of user documents.
        Requires multipart/form-data with 'front' and 'back' file fields.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                front:
                  type: string
                  format: binary
                back:
                  type: string
                  format: binary
      responses:
        "401":
          description: User in processing or already verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User in processing"
                  data:
                    type: string
                    example: "already_registered"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server connection"
                  data:
                    type: string
                    example: "internal_error"

  /user/update_fcm:
    post:
      summary: Update FCM token
      description: Update the Firebase Cloud Messaging (FCM) token for push notifications.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcm_token:
                  type: string
                  example: "sample_fcm_token"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Done"
  /auth/validate_token:
    post:
      summary: Validate Token
      description: Validate the user token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
      responses:
        "200":
          description: Token validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "done"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "token_value_here"
                      refresh_token:
                        type: string
                        example: "refresh_token_value_here"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "internal server connection"
                  data:
                    type: string
                    example: "internal_error"
  /user/edit_user:
    post:
      summary: Edit User
      description: Edit user information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestEdit"
      responses:
        "200":
          description: User information edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User information edited successfully"

        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "invalid request parameters"
                  data:
                    type: string
                    example: "invalid_parameters"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "internal server connection"
                  data:
                    type: string
                    example: "internal_error"

  /user/get_symbol:
    get:
      summary: Get Symbols
      description: Retrieve symbols.
      responses:
        "200":
          description: Symbols retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "done"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Symbol"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "invalid request parameters"
                  data:
                    type: string
                    example: "invalid_parameters"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "internal server connection"
                  data:
                    type: string
                    example: "internal_error"

  /user/create_transaction:
    post:
      summary: Create Transaction
      description: Create a new transaction.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "201":
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "invalid request parameters"
                  data:
                    type: string
                    example: "invalid_parameters"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "internal server connection"
                  data:
                    type: string
                    example: "internal_error"

  /user/make_deposit:
    post:
      summary: Make Deposit
      description: Make a deposit.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepositRequest"
      responses:
        "200":
          description: Deposit made successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "invalid request parameters"
                  data:
                    type: string
                    example: "invalid_parameters"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "internal server connection"
                  data:
                    type: string
                    example: "internal_error"
                    
  /user/cancel:
    post:
      summary: "Cancel user order"
      parameters:
        - in: query
          name: "body"
          description: "Order ID to cancel"
          required: true
          schema:
            type: "object"
            properties:
              order_id:
                type: "string"
                example: "123456"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Done"
        '404':
          description: transaction not found
        '401':
          description: Unauthorized, user not authenticated
        '403':
          description: Forbidden, user doesn't have permission
        
  /user/payment_methods:
    get:
      summary: Retrieve payment methods
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: done
                  data:
                    type: object
                    properties:
                      crypto:
                        type: array
                        items:
                          $ref: "#/components/schemas/UserCrypto"
                      debit_card:
                        type: array
                        items:
                          $ref: "#/components/schemas/UserDebitCard"
  /user/get_single_transaction:
    post:
      summary: Retrieve a single transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the transaction to retrieve
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: done
                  data:
                    $ref: "#/components/schemas/Transaction"
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Transaction not found"
                  data:
                    type: string
                    example: "not_found"

  /user/delivery_methods:
    get:
      summary: Retrieve delivery methods
      parameters:
        - in: query
          name: filter
          schema:
            type: string
          description: Filter delivery methods based on a certain criteria
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: done
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserDeliveryMethods"

        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "invalid request parameters"
                  data:
                    type: string
                    example: "invalid_parameters"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "internal server connection"
                  data:
                    type: string
                    example: "internal_error"
  /history:
    post:
      summary: Get historical data
      requestBody:
        required: true
        content:
          application/json:
            schema:
                  type: object
                  properties:
                    symbol:
                      type: string
                      example: "FX:XAUUSD"
                    timeframe:
                      type: string
                      example: "1"
                    until:
                      type: integer
                      example: 1713360757
                    to:
                      type: integer
                      example: 1713378757
                    count:
                      type: integer
                      example: 1
                  required:
                    - symbol
                    - timeframe
                    - until
                    - to
                    - count
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    i:
                      type: integer
                      example: 0
                    v:
                      type: array
                      items:
                        type: number
                  required:
                    - i
                    - v
    
  /market_status:
    get:
      summary: Get current market status
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    session:
                      type: string
                      example: 1700-1700
                    timezone:
                      type: string
                      example: America/New_York
components:
  schemas:
    UserCrypto:
      type: object
      properties:
        _id:
          type: string
          format: objectid
          description: The unique identifier of the crypto payment method
          example: "60cb3dfe39ad0327d457ca92"
        coin:
          type: string
          description: Name of the cryptocurrency
          example: "Bitcoin"
        vat:
          type: number
          description: Value-added tax for the cryptocurrency
          example: 0.05
      required:
        - coin
        - vat

    UserDebitCard:
      type: object
      properties:
        _id:
          type: string
          format: objectid
          description: The unique identifier of the debit card payment method
          example: "60cb3dfe39ad0327d457ca93"
        vat:
          type: number
          description: Value-added tax for the debit card
          example: 0.1
      required:
        - vat
    CancelRequest:
      type: object
      properties:
        order_id:
          type: string
          example: "123456"
    CancelResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "done"
    DepositRequest:
      type: object
      properties:
        payment_method:
          type: string
          example: "credit_card"
        total_price:
          type: number
          example: 100.00
    DepositResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "done"
        data:
          type: object
          properties:
            order_id:
              type: string
              example: "123456"
            url:
              type: string
              example: "https://example.com/payment/invoice"
    TransactionRequest:
      type: object
      properties:
        status_delivery:
          type: string
          example: "delivered"
        payment_method:
          type: string
          example: "credit_card"
        product_ids:
          type: array
          items:
            type: string
            example: "5feceb67ff866cd082a1aab73"
        delivery_method:
          type: string
          example: "express"
        total_price:
          type: number
          example: 100.00
    Transaction:
      type: object
      properties:
        _id:
          type: string
          example: "5feceb66ff866cd082a1aab72"
        order_id:
          type: string
          example: "123456"
        product_id:
          type: array
          items:
            type: string
            example: "5feceb67ff866cd082a1aab73"
        user_id:
          type: string
          example: "5feceb66ff866cd082a1aab74"
        created_at:
          type: string
          format: date-time
          example: "2024-04-04T12:00:00Z"
        payment_method:
          type: string
          example: "credit_card"
        delivery_method:
          type: string
          example: "express"
        payment_completion:
          type: string
          example: "false"
        status_delivery:
          type: string
          example: "delivered"
        symbol:
          type: string
          example: "symbol_name"
        total_price:
          type: number
          example: 100.00
        vat:
          type: number
          example: 20.00
        payment_status:
          type: string
          example: "pending"
        is_debit:
          type: boolean
          example: false
        external_data:
          type: object
          additionalProperties:
            type: string
          example:
            key1: "value1"
            key2: "value2"
    RequestEdit:
      type: object
      properties:
        name:
          type: string
        address:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        email:
          type: string
          nullable: true
        phone:
          type: string
      required:
        - name
        - phone

    Address:
      type: object
      properties:
        label:
          type: string
        country:
          type: string
        city:
          type: string
        region:
          type: string
        address:
            type: string

    RegisterRequest:
      type: object
      properties:
        phone:
          type: string
          example: "+1234567890"
        otp_code:
          type: integer
          example: 12345
    FANDQ:
      type: object
      properties:
        _id:
          type: string
          example: "5e7a2c3bc5f90a2fe8b3b0e9"
        question:
          type: string
          example: "What is Lorem Ipsum?"
        answer:
          type: string
          example: "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
        who_define:
          type: string
          example: "Some defining info"
        created_at:
          type: string
          format: date-time
          example: "2024-03-27T12:00:00Z"
    User:
      type: object
      properties:
        _id:
          type: string
          example: "5e7a2c3bc5f90a2fe8b3b0e9"
        avatar:
          type: string
          example: "https://example.com/avatar.jpg"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "john.doe@example.com"
        phone:
          type: string
          example: "+1234567890"
        password:
          type: string
          example: "hashed_password"
        phone_verified:
          type: boolean
          example: true
        otp_code:
          type: integer
          example: 123456
        address:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        reset_token:
          type: string
          example: "reset_token_value"
        reset_token_valid:
          type: string
          format: date-time
          example: "2024-03-27T12:00:00Z"
        change_phone:
          type: boolean
          example: false
        exchange_phone:
          type: string
          example: "+9876543210"
        freeze:
          type: boolean
          example: false
        currency:
          type: string
          example: "USD"
        chat_list:
          type: array
          items:
            type: string
            example: "chat_id_1"
        permissions:
          $ref: "#/components/schemas/Permission"
        otp_valid:
          type: string
          format: date-time
          example: "2024-03-27T12:00:00Z"
        retry_otp:
          type: integer
          example: 3
        created_at:
          type: string
          format: date-time
          example: "2024-03-27T12:00:00Z"
        user_verified:
          type: boolean
          example: true
        user_status:
          type: string
          enum: ["ACTIVE", "INACTIVE", "PENDING"]
          example: "ACTIVE"
        reason:
          type: string
          example: "Reason for status"
        support_or_admin:
          type: boolean
          example: true
        wallet:
          $ref: "#/components/schemas/Wallet"
        fcm_token:
          type: string
          example: "fcm_token_value"

    Permission:
      type: object
      properties:
        read:
          type: boolean
          example: true
        write:
          type: boolean
          example: true

    Wallet:
      type: object
      properties:
        balance:
          type: number
          example: 100.00
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"

    GeneralData:
      type: object
      properties:
        _id:
          type: string
          example: "5e7a2c3bc5f90a2fe8b3b0e9"
        aedusd:
          type: number
          example: 3.67

    Symbol:
      type: object
      properties:
        _id:
          type: string
          example: "5feceb66ff866cd082a1aab72"
        name:
          type: string
          example: "Symbol Name"
        type:
          type: string
          example: "Symbol Type"
        side:
          type: string
          example: "Symbol Side"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        created_at:
          type: string
          format: date-time
          example: "2024-04-04T12:00:00Z"

    Image:
      type: object
      properties:
        url:
          type: string
          example: "https://example.com/image.jpg"
    PaymentRequest:
      type: object
      properties:
        order_id:
          type: string
          example: "123456"
    PaymentResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "done"
        data:
          $ref: "#/components/schemas/TransactionComponent"
    UserDeliveryMethods:
      type: object
      properties:
        _id:
          type: string
          format: objectid
          description: The unique identifier of the delivery method
          example: "60cb3dfe39ad0327d457ca92"
        description:
          type: string
          description: Description of the delivery method
          example: "Standard shipping"
        who_define:
          type: string
          description: Who defined the delivery method
          example: "Admin"
        created_at:
          type: string
          format: date-time
          description: The date and time when the delivery method was created
          example: "2024-04-17T12:00:00Z"
        title:
          type: string
          description: Title of the delivery method
          example: "Standard"
        fee:
          type: number
          description: Fee for the delivery method
          example: 5.99
        sub_title:
          type: string
          description: Subtitle of the delivery method
          example: "3-5 business days"
        estimated_time:
          type: string
          description: Estimated delivery time
          example: "3-5 days"
        time_provided:
          type: boolean
          description: Indicates if estimated time is provided
          example: true
        disable:
          type: boolean
          description: Indicates if the delivery method is disabled
          example: false
      required:
        - description
        - who_define
        - title
        - fee
        - sub_title
        - time_provided
    TransactionComponent:
      type: object
      properties:
        id:
          type: string
          example: "5feceb66ff866cd082a1aab72"
        order_id:
          type: string
          example: "123456"
        user_id:
          type: string
          example: "5feceb66ff866cd082a1aab74"
        created_at:
          type: string
          format: date-time
          example: "2024-04-04T12:00:00Z"
        payment_method:
          type: string
          example: "credit_card"
        delivery_method:
          type: string
          example: "express"
        payment_completion:
          type: string
          example: "false"
        status_delivery:
          type: string
          example: "delivered"
        symbol:
          type: string
          example: "symbol_name"
        total_price:
          type: number
          example: 100.00
        vat:
          type: number
          example: 20.00
        payment_status:
          type: string
          example: "pending"
        is_debit:
          type: boolean
          example: false
        external_data:
          type: object
          additionalProperties:
            type: string
          example:
            key1: "value1"
            key2: "value2"

    CallCenterDatas:
      type: object
      properties:
        _id:
          type: string
          example: "5e7a2c3bc5f90a2fe8b3b0e8"
        whatsapp:
          type: string
          example: "+1234567890"
        live:
          type: string
          example: "live_chat_id"
        telegram:
          type: string
          example: "@telegram_id"
        website_reference:
          type: string
          example: "https://example.com"
        email:
          type: string
          example: "contact@example.com"
        phone:
          type: string
          example: "+1234567890"

    Product:
      type: object
      properties:
        _id:
          type: string
          example: "5e7a2c3bc5f90a2fe8b3b0e9"
        name:
          type: string
          example: "Product Name"
        description:
          type: string
          example: "Product Description"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        width:
          type: number
          example: 10.5
        length:
          type: number
          example: 20.3
        weight_oz:
          type: number
          example: 16.8
        weight_gramm:
          type: number
          example: 476.2
        purity:
          type: number
          example: 0.999
        percentage:
          type: number
          example: 99.9
        hide:
          type: boolean
          example: false
        limited:
          type: boolean
          example: true
        who_define:
          type: string
          example: "Some defining info"
        amount:
          type: integer
          example: 100
        created_at:
          type: string
          format: date-time
          example: "2024-03-27T12:00:00Z"

    SendOTP:
      type: object
      properties:
        phone:
          type: string
          example: "+1234567890"